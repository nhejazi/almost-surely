<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Productivity on Almost Surely...</title>
    <link>http://nimahejazi.org/blog/categories/productivity/</link>
    <description>Recent content in Productivity on Almost Surely...</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 29 Jun 2017 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://nimahejazi.org/blog/categories/productivity/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>renjin: put some Java in your R</title>
      <link>http://nimahejazi.org/blog/post/testing-renjin/</link>
      <pubDate>Thu, 29 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>http://nimahejazi.org/blog/post/testing-renjin/</guid>
      <description>R is a great, highly flexible language for statistical computing, but it does suffer greatly from performance issues. As I’ve steadily increase my use of R, I quickly became aware that I would have to one day learn to integrate R with a programming language with better performance, the main choice here being C++. To integrate R with C++, the Rcpp framework (and R package) was created, allowing for parts of the R code of a given package or project to be re-written in C++ and easily integrated with R.</description>
    </item>
    
    <item>
      <title>taking blogdown for a test drive</title>
      <link>http://nimahejazi.org/blog/post/trying-blogdown/</link>
      <pubDate>Mon, 29 May 2017 00:00:00 +0000</pubDate>
      
      <guid>http://nimahejazi.org/blog/post/trying-blogdown/</guid>
      <description>Recently, I came across the blogdown R package, a variant of RStudio’s popular bookdown R package, made by Yihui Xie and Amber Thomas. Blogdown allows the user to write blog posts with code chunks, in any of the large variety of languages supported by RMarkdown, allowing for computationally reproducible writing and programming. It also plays well with the new static site engine Hugo. Here, I’m mostly just going to take blogdown for a spin.</description>
    </item>
    
    <item>
      <title>a shell called xonsh</title>
      <link>http://nimahejazi.org/blog/post/shell-called-xonsh/</link>
      <pubDate>Sat, 25 Jun 2016 00:00:00 +0000</pubDate>
      
      <guid>http://nimahejazi.org/blog/post/shell-called-xonsh/</guid>
      <description>Any computational scientist who spends their time writing and using tools or analyzing data has certainly had to spend a great deal of his/her time interacting with a command line interface (as an aside, I at one point spent so much time staring at the command line that I wrote a set of scripts to provide me with comical quotes to break up the monotony of my work &amp;ndash; it can be found here).</description>
    </item>
    
    <item>
      <title>how to love a tool - atom</title>
      <link>http://nimahejazi.org/blog/post/love-a-tool-atom/</link>
      <pubDate>Wed, 25 May 2016 00:00:00 +0000</pubDate>
      
      <guid>http://nimahejazi.org/blog/post/love-a-tool-atom/</guid>
      <description>As part of the series of posts on computational tools that I have grown to love (&amp;ldquo;How to Love a Tool&amp;hellip;&amp;rdquo;), here, I am going to talk about the Atom text editor, developed rather recently by GitHub. Unlike the other text editor I discussed in this series of blog posts - the awesome and minimal Neovim - Atom is designed to be &amp;ldquo;a hackable text editor for the 21st Century,&amp;rdquo; built mostly on web-based technologies (e.</description>
    </item>
    
    <item>
      <title>how to love a tool - gitsome</title>
      <link>http://nimahejazi.org/blog/post/love-a-tool-gitsome/</link>
      <pubDate>Thu, 12 May 2016 00:00:00 +0000</pubDate>
      
      <guid>http://nimahejazi.org/blog/post/love-a-tool-gitsome/</guid>
      <description>After adopting the minimalistic yet awesome Neovim as my new all-purpose text editor, I happened upon a new (and truly awesome!) shell, designed for heavy interaction with GitHub. After a few hours of playing around with this new tool, I am confident that using this new shell, playfully titled gitsome (think, &amp;ldquo;get some,&amp;rdquo; or maybe that&amp;rsquo;s just me reading in between the lines too much?), really does improve productivity tremendously. Of course nothing can take the place of Bash for general use (principally due to how ubiquitous Bash appears to be), but gitsome, and the underlying shell on which it is based (Xonsh), provides a look at what a modern shell environment ought to look like&amp;hellip;</description>
    </item>
    
    <item>
      <title>how to love a tool - neovim</title>
      <link>http://nimahejazi.org/blog/post/love-a-tool-neovim/</link>
      <pubDate>Fri, 06 May 2016 00:00:00 +0000</pubDate>
      
      <guid>http://nimahejazi.org/blog/post/love-a-tool-neovim/</guid>
      <description>Recently, I decided to look for new tools to improve my work efficiency, and very early in the endeavor to find new and better tools, I came across the fairly recent Neovim project. The aim of Neovim is to accomplish a full re-factoring of the source code of Vim, one of the oldest and most popular extensible text editors; this is sort of a big deal because Vim has historically been maintained only by its creator Bram Moolenaar, and not every change made to Vim has been done in a forward-thinking manner.</description>
    </item>
    
  </channel>
</rss>