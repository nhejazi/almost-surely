<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>R on Almost Surely...</title>
    <link>http://nimahejazi.org/blog/categories/r/</link>
    <description>Recent content in R on Almost Surely...</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 29 Jun 2017 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://nimahejazi.org/blog/categories/r/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>renjin: put some Java in your R</title>
      <link>http://nimahejazi.org/blog/post/testing-renjin/</link>
      <pubDate>Thu, 29 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>http://nimahejazi.org/blog/post/testing-renjin/</guid>
      <description>R is a great, highly flexible language for statistical computing, but it does suffer greatly from performance issues. As I’ve steadily increase my use of R, I quickly became aware that I would have to one day learn to integrate R with a programming language with better performance, the main choice here being C++. To integrate R with C++, the Rcpp framework (and R package) was created, allowing for parts of the R code of a given package or project to be re-written in C++ and easily integrated with R.</description>
    </item>
    
    <item>
      <title>taking blogdown for a test drive</title>
      <link>http://nimahejazi.org/blog/post/trying-blogdown/</link>
      <pubDate>Mon, 29 May 2017 00:00:00 +0000</pubDate>
      
      <guid>http://nimahejazi.org/blog/post/trying-blogdown/</guid>
      <description>Recently, I came across the blogdown R package, a variant of RStudio’s popular bookdown R package, made by Yihui Xie and Amber Thomas. Blogdown allows the user to write blog posts with code chunks, in any of the large variety of languages supported by RMarkdown, allowing for computationally reproducible writing and programming. It also plays well with the new static site engine Hugo. Here, I’m mostly just going to take blogdown for a spin.</description>
    </item>
    
    <item>
      <title>R graphics - ggplot versus base</title>
      <link>http://nimahejazi.org/blog/post/r-graphics-ggplot-v-base/</link>
      <pubDate>Mon, 02 May 2016 00:00:00 +0000</pubDate>
      
      <guid>http://nimahejazi.org/blog/post/r-graphics-ggplot-v-base/</guid>
      <description>In the past several weeks, something of a debate has emerged regarding whether, in fact, there is a superior plotting system in R. First, a bit of history. The arguments on plotting all began with an off-hand comment about the plotting preferences of statistician and JHU Professor Jeff Leek, on the &amp;ldquo;Not So Standard Deviations&amp;rdquo; podcast of Hilary Parker and Roger Peng. The comment, as I remember it, had to do with why anyone would ever bother to use base graphics in R when a tool like ggplot2 exists.</description>
    </item>
    
    <item>
      <title>snooping through my SNPs, part 1</title>
      <link>http://nimahejazi.org/blog/post/snooping-thru-my-snps-1/</link>
      <pubDate>Tue, 22 Mar 2016 00:00:00 +0000</pubDate>
      
      <guid>http://nimahejazi.org/blog/post/snooping-thru-my-snps-1/</guid>
      <description>In recent years, the growing trend of personal genomics has spawned its own industry, with several companies now offering to sequence the genomes of individuals, with some even providing health analytics and ancestry information. A couple years ago, I sent a sample of my own DNA (via saliva) to 23andMe, Inc.; this sample was then used to perform sequencing on single nucleotide polymorphisms (SNPs) in my genome &amp;ndash; and to provide me with a wealth of information about potential disease risks and ancestry.</description>
    </item>
    
  </channel>
</rss>